Java HotSpot(TM) 64-Bit Server VM (25.281-b09) for bsd-amd64 JRE (1.8.0_281-b09), built on Dec  9 2020 12:44:49 by "java_re" with gcc 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.5)
Memory: 4k page, physical 16777216k(675808k free)

/proc/meminfo:

CommandLine flags: -XX:InitialHeapSize=20971520 -XX:MaxHeapSize=20971520
-XX:MaxNewSize=10485760 -XX:MaxTenuringThreshold=15
 -XX:NewSize=10485760 -XX:OldPLABSize=16
 -XX:PretenureSizeThreshold=3145728
 -XX:+PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps
 -XX:SurvivorRatio=8 -XX:+UseCompressedClassPointers
 -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseParNewGC

0.123: [GC (Allocation Failure) 0.123: [ParNew: 6493K->644K(9216K), 0.0031714 secs]
10589K->8838K(19456K), 0.0032794 secs] [Times: user=0.02 sys=0.00, real=0.00 secs]
Heap
 par new generation   total 9216K, used 3150K [0x00000007bec00000, 0x00000007bf600000, 0x00000007bf600000)
  eden space 8192K,  30% used [0x00000007bec00000, 0x00000007bee72908, 0x00000007bf400000)
  from space 1024K,  62% used [0x00000007bf500000, 0x00000007bf5a1298, 0x00000007bf600000)
  to   space 1024K,   0% used [0x00000007bf400000, 0x00000007bf400000, 0x00000007bf500000)
 concurrent mark-sweep generation total 10240K, used 8194K [0x00000007bf600000, 0x00000007c0000000, 0x00000007c0000000)
 Metaspace       used 3088K, capacity 4496K, committed 4864K, reserved 1056768K
  class space    used 343K, capacity 388K, committed 512K, reserved 1048576K

  -server -Xms4g -Xmx4g -XX:+UseG1GC -XX:G1ReservePercent=25
  -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+DisableExplicitGC
  -XX:+ParallelRefProcEnabled
  -Xloggc:/u01/order-service-api/log/gc.log
  -XX:+PrintGCDetails -XX:+PrintGCDateStamps
  -XX:+PrintGCApplicationStoppedTime
  -XX:+PrintTenuringDistribution -XX:+PrintAdaptiveSizePolicy
  -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=30m
  -XX:+UnlockExperimentalVMOptions
  -XX:G1MaxNewSizePercent=80

-server -Xms4g -Xmx4g
-XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=256m
-Xss512k -XX:+UseG1GC -XX:G1ReservePercent=25
-XX:ParallelGCThreads=24 -XX:SoftRefLRUPolicyMSPerMB=0
-XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled
-Xloggc:/u01/order-service-api/log/gc.log
-XX:+PrintHeapAtGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps
-XX:+PrintGCApplicationStoppedTime -XX:+PrintTenuringDistribution
-XX:+PrintAdaptiveSizePolicy -XX:+UseGCLogFileRotation
-XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=30m
-XX:+UnlockExperimentalVMOptions
-XX:G1MaxNewSizePercent=80

  {"name":"taxi_slave","driverClassName":"com.mysql.jdbc.Driver","jdbcUrl":"jdbc:mysql://SJ-mysql-s-ro-taxi-taxi0-online-f5-db.01zhuanche.com:6330/taxi_0?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;connectTimeout=1500&amp;socketTimeout=2000","username":"o_taxi_r","password":"Q%UcHKjtXRGth9gQ","minimumIdle":20,"maximumPoolSize":100,"connectionTimeout":3000,"leakDetectionThreshold":10000,"connectionTestQuery":"SELECT 1"}
[端内] 无车取消本次查询 minId:2244152969, maxId:2244153369, limit:400
[2244152971, 2244152973

[渠道] 无车取消本次查询 minId:2674244871, maxId:2674245271, limit:400
[2674244873, 2674244875

<config>
  <value>{"name":"taxi_slave","driverClassName":"com.mysql.jdbc.Driver","jdbcUrl":"jdbc:mysql://SJ-mysql-s-ro-taxi-taxi0-online-f5-db.01zhuanche.com:6330/taxi_0?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&connectTimeout=1500&socketTimeout=2000","username":"o_taxi_r","password":"Q%UcHKjtXRGth9gQ","minimumIdle":20,"maximumPoolSize":100,"connectionTimeout":3000,"leakDetectionThreshold":10000,"connectionTestQuery":"SELECT 1"}</value>
</config>


{
    "name":"taxi_slave",
    "driverClassName":"com.mysql.jdbc.Driver",
    "jdbcUrl":"jdbc:mysql://SJ-mysql-s-ro-taxi-taxi0-online-f5-db.01zhuanche.com:6330/taxi_0?
    autoReconnect=true&failOverReadOnly=false&connectTimeout=1500&socketTimeout=2000",
    "username":"o_taxi_r",
    "password":"Q%UcHKjtXRGth9gQ",
    "minimumIdle":20,
    "maximumPoolSize":100,
    "connectionTimeout":3000,
    "leakDetectionThreshold":10000,
    "connectionTestQuery":"SELECT 1"
}

{
    "name":"order_center_slave",
    "driverClassName":"com.mysql.jdbc.Driver",
    "jdbcUrl":"jdbc:mysql://mysql-s5310-car-order-online.01zhuanche.com:5310/rentcar?useUnicode=true&characterEncoding=utf8&
    autoReconnect=true&
    rewriteBatchedState&
    connectTimeout=1000&
    socketTimeout=5000",
    "username":"o_service",
    "password":"CpCZ6H47M7W_wYKc",
    "minimumIdle":15,
    "maximumPoolSize":50,
    "connectionTimeout":3000,
    "leakDetectionThreshold":10000,
    "connectionTestQuery":"SELECT 1"
}


idleTimeout 默认 10min
maxLifetime 默认  30min
keepAliveTime 默认 0，不开启任务
connectionTimeout 默认 30s
validationTimeout 默认 5s
defaultPoolSize 默认 10

createPoolEntry 时、添加两个任务 MaxLifetimeTask、KeepaliveTask()

标记删除
1. MaxLifetimeTask  30min 标记删除(soft)超过最大生存时间的连接 添加等待线程相同的线程数
2. KeepaliveTask 若保留连接，就检查连接存活性，标记删除(close)并添加等待数 或者 保留连接
3. 线程池挂起、线程池关闭(soft)
4. 时钟回拨超过128ms，连接池里的连接都标记删除(soft)

HikariPool 任务
1. 连接泄露检测 ProxyLeakTask 10s，
    创建连接池时、 创建连接poolEntry时、添加
    异常时取消、驱逐连接时取消、关闭连接时取消、检测
2. 最大生存周期检测 MaxLifetimeTask  30min，创建连接时创建此任务
3. 连接存活性检测 KeepaliveTask

HouseKeeper 30s
1. 若jmx有更新ConnectionTimeout 和 validationTimeout，leakDetectionThreshold的值，就更新
2. 检测时钟回拨，超过128ms
3. 若idleTimeout的值>0, 并且 config.getMinimumIdle() < config.getMaximumPoolSize()，
    动态调整连接池大小，未使用>最小空闲，将超过idleTimeout的连接从连接池移除，并关闭
    若 min(max-total，min-idle), 最小空闲填充必须值 和 最多还能新建连接的值 取最小，
    即：保证不超过最大连接数的情况下、尽量保证空闲

若连接超时、会移除，然后动态调整连接池,两种情况不调整，
    1. notInUse的数量<minimumIdle
    2. 没有找到距离上次使用距离现在的时间>将超过idleTimeout的连接
    int toRemove = notInUse.size() - config.getMinimumIdle();
    toRemove > 0
    && elapsedMillis(entry.lastAccessed, now) > idleTimeout
    && connectionBag.reserve(entry)
若连接超过500ms未使用、才检测有效性
超过maxLifeTime标记删除，标记删除不会检测有效性



HikariPool-1 - Failed to validate connection
com.mysql.jdbc.JDBC4Connection@7174224b
(No operations allowed after connection closed.)